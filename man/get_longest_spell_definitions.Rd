% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_definitions_helper_functions.R
\name{get_longest_spell_definitions}
\alias{get_longest_spell_definitions}
\title{Get Longest Spell Definitions}
\usage{
get_longest_spell_definitions(
  definitions_year,
  spell_column,
  list_name = "longest_spell"
)
}
\arguments{
\item{definitions_year}{A list (or similar structure) containing spell definitions
for a specific year. One element should hold an object with a
\code{spell_length$spell_day} entry whose second element is a string like
\code{"(rain >= X) & rain <= Y"}.}

\item{spell_column}{A string or integer specifying which element of
\code{definitions_year} contains the spell information. If \code{NULL}, no spell is
extracted and both bounds return as \code{NA}.}

\item{list_name}{Character. The name to use for the returned sub‑list. Defaults
to \code{"longest_spell"}.}
}
\value{
A named list of length 1. The single element is named by \code{list_name}
and contains a list with two numeric components:
\itemize{
\item \code{spell_from}: the lower bound \(X\) extracted from the expression, or \code{NA}.
\item \code{spell_to}: the upper bound \(Y\) extracted from the expression, or \code{NA}.
}
}
\description{
Extract the numeric lower and upper bounds from a spell‑length calculation
expression stored in a year’s definitions list.
}
\details{
This function looks up \code{definitions_year[[spell_column]]}, then expects to find
a string at
\code{spell$spell_length$spell_day[[2]]} matching the pattern
\code{"...>= X ...<= Y"}. It uses regular expressions to pull out the numbers
\code{X} (after \code{>=}) and \code{Y} (after \code{<=}). If the column is missing or \code{NULL},
both \code{spell_from} and \code{spell_to} are set to \code{NA}.
}
\examples{
definitions_year <- list(
  my_spell = list(
    spell_length = list(
      spell_day = list(NULL, "(rain >= 0.85) & rain <= 2.3")
    )
  )
)
get_longest_spell_definitions(definitions_year, "my_spell")
# $longest_spell
# $longest_spell$spell_from
# [1] 0.85
#
# $longest_spell$spell_to
# [1] 2.3
}
