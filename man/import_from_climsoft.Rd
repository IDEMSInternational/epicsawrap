% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_functions.R
\name{import_from_climsoft}
\alias{import_from_climsoft}
\title{Import Data from Climsoft}
\usage{
import_from_climsoft(
  con = get_climsoft_conn(),
  stationfiltercolumn = "stationId",
  stations = c(),
  elementfiltercolumn = "elementId",
  elements = c(),
  include_observation_flags = FALSE,
  include_station_info = FALSE,
  unstack_data = TRUE,
  start_date = NULL,
  end_date = NULL
)
}
\arguments{
\item{con}{Connection object to the Climsoft database, default is the result of \code{get_climsoft_conn()}.}

\item{stationfiltercolumn}{Name of the column to filter by stations, default is 'stationId'.}

\item{stations}{Vector of station IDs to filter the data, defaults to an empty vector.}

\item{elementfiltercolumn}{Name of the column to filter by elements, default is 'elementId'.}

\item{elements}{Vector of element IDs to filter the data, defaults to an empty vector.}

\item{include_observation_flags}{Boolean, if TRUE includes observation flags in the output, defaults to FALSE.}

\item{include_station_info}{Boolean, if TRUE includes station metadata in the output, defaults to FALSE.}

\item{unstack_data}{Boolean. Option to unstack data once read in.}

\item{start_date}{Start date for filtering the observations, format should be Date, defaults to NULL.}

\item{end_date}{End date for filtering the observations, format should be Date, defaults to NULL.}
}
\value{
A list containing Climsoft station and observation data based on the filters applied. If \code{include_station_info} is TRUE, the list will have two elements: 'Metadata' with station details and 'Daily data' with observations.
}
\description{
Connects to a Climsoft database and imports data based on the specified filters for stations and elements, with options to include observation flags and station information.
}
\examples{
#con <- get_climsoft_conn()
#data <- import_from_climsoft(con, stations = c("101", "102"), elements = c("1", "2"), start_date = as.Date("2020-01-01"), end_date = as.Date("2020-01-31"))

}
